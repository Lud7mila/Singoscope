/****************************************************************************************
*
*   Объявление модуля Video
*
*   Предоставляет функции для работы с экраном.
*
*   Автор: Людмила Огородникова, 2010
*
****************************************************************************************/

/****************************************************************************************
*
*   Константы
*
****************************************************************************************/

// типы памяти для поверхностей
enum MEMORYTYPE
{
	MEMTYPE_VIDEO_MEMORY = 1,
	MEMTYPE_SYSTEM_MEMORY = 2
};

// коды возврата некоторых функций модуля Video
enum VIDEORESULT
{
	VIDEO_SUCCESS = 0,
	VIDEO_FAIL = 1,
	VIDEO_SCREEN_PIXEL_FORMAT_CHANGED = 2
};

/****************************************************************************************
*
*   Функция Video_Init
*
*   Параметры
*       Нет
*
*   Возвращаемое значение
*       true, если модуль успешно инициализован; иначе false.
*
*   Инициализирует модуль.
*
****************************************************************************************/

bool Video_Init();

/****************************************************************************************
*
*   Функция Video_Uninit
*
*   Параметры
*       Нет
*
*   Возвращаемое значение
*       Нет
*
*   Деинициализирует модуль.
*
****************************************************************************************/

void Video_Uninit();

/****************************************************************************************
*
*   Функция Video_CheckScreenStatus
*
*   Параметры
*       Нет
*
*   Возвращаемое значение
*       VIDEO_SUCCESS, если формат пикселов экрана не изменился;
*       VIDEO_FAIL, если не удалось установить, изменился ли формат пикселов экрана;
*       VIDEO_SCREEN_PIXEL_FORMAT_CHANGED, формат пикселов экрана изменился.
*
*   Проверяет, изменился ли формат пикселов экрана. В случае, если первичная поверхность
*   была потеряна, функция восстанавливает её.
*
****************************************************************************************/

VIDEORESULT Video_CheckScreenStatus();

/****************************************************************************************
*
*   Функция Video_GetScreenResolution
*
*   Параметры
*       pScreenWidth - указатель на переменную, в которую будет записана ширина экрана
*       pScreenHeight - указатель на переменную, в которую будет записана высота экрана
*
*   Возвращаемое значение
*       true, если разрешение экрана успешно возвращено; иначе false.
*
*   Возвращает ширину и высоту экрана в пикселах.
*
****************************************************************************************/

bool Video_GetScreenResolution(
	__out PDWORD pScreenWidth,
	__out PDWORD pScreenHeight);

/****************************************************************************************
*
*   Функция Video_CreateSurface
*
*   Параметры
*       Width - ширина поверхности
*       Height - высота поверхности
*       MemoryType - тип памяти, в которой должна быть создана поверхность:
*                    MEMTYPE_VIDEO_MEMORY - в видеопамяти,
*                    MEMTYPE_SYSTEM_MEMORY - в системной памяти
*
*   Возвращаемое значение
*       Описатель созданной поверхности.
*
*   Создаёт поверхность в видеопамяти либо в системной памяти в зависимости от параметра
*   MemoryType.
*
****************************************************************************************/

HANDLE Video_CreateSurface(
	__in DWORD Width,
	__in DWORD Height,
	__in MEMORYTYPE MemoryType);

/****************************************************************************************
*
*   Функция Video_DeleteSurface
*
*   Параметры
*       hSurface - описатель поверхности
*
*   Возвращаемое значение
*       Нет
*
*   Удаляет указанную поверхность.
*
****************************************************************************************/

void Video_DeleteSurface(
	__in HANDLE hSurface);

/****************************************************************************************
*
*   Функция Video_GetDC
*
*   Параметры
*       hSurface - описатель поверхности
*
*   Возвращаемое значение
*       Описатель созданного GDI-совместимого контекста устройства.
*
*   Создаёт GDI-совместимый контекст устройства для указанной поверхности.
*
****************************************************************************************/

HDC Video_GetDC(
	__in HANDLE hSurface);

/****************************************************************************************
*
*   Функция Video_ReleaseDC
*
*   Параметры
*       hSurface - описатель поверхности
*       hdc - описатель GDI-совместимого контекста устройства для поверхности hSurface
*
*   Возвращаемое значение
*       Нет
*
*   Освобождает указанный GDI-совместимый контекст устройства для поверхности hSurface.
*
****************************************************************************************/

void Video_ReleaseDC(
	__in HANDLE hSurface,
	__in HDC hdc);

/****************************************************************************************
*
*   Функция Video_SetHwndForClipping
*
*   Параметры
*       hwnd - описатель окна
*
*   Возвращаемое значение
*       true, если описатель окна успешно установлен; иначе false.
*
*   Устанавливает описатель окна, который будет использоваться для обрезки прямоугольных
*   областей, копируемых на экран с помощью функции Video_BltRectToScreen.
*
****************************************************************************************/

bool Video_SetHwndForClipping(
	__in HWND hwnd);

/****************************************************************************************
*
*   Функция Video_BltRectToScreen
*
*   Параметры
*       x - х-координата левого верхнего угла прямоугольной области экрана, в которую
*           нужно скопировать прямоугольную область prcSrc поверхности hSrcSurface
*       y - y-координата левого верхнего угла прямоугольной области экрана, в которую
*           нужно скопировать прямоугольную область prcSrc поверхности hSrcSurface
*       hSrcSurface - описатель поверхности, с которой нужно cкопировать прямоугольную
*                     область prcSrc на экран
*       prcSrc - указатель на структуру RECT, задающую координаты прямоугольной области
*                поверхности hSrcSurface, которую нужно скопировать на экран
*
*   Возвращаемое значение
*       VIDEO_SUCCESS, если копирование произведено успешно;
*       VIDEO_FAIL, если произошла неисправимая ошибка;
*       VIDEO_SCREEN_PIXEL_FORMAT_CHANGED, если изменился формат пикселов экрана, в этом
*                                          случае необходимо пересоздать поверхность
*                                          hSrcSurface и вызвать эту функцию снова.
*
*   Копирует прямоугольную область, заданную параметром prcSrc, с поверхности hSrcSurface
*   на прямоугольную область экрана, левый верхний угол которой задан параметрами х и у.
*
****************************************************************************************/

VIDEORESULT Video_BltRectToScreen(
	__in int x,
	__in int y,
	__in HANDLE hSrcSurface,
	__in RECT *prcSrc);

/****************************************************************************************
*
*   Функция Video_BltRectFromScreen
*
*   Параметры
*       x - х-координата левого верхнего угла прямоугольной области экрана, которую нужно
*           скопировать в прямоугольную область prcDst поверхности hDstSurface
*       y - y-координата левого верхнего угла прямоугольной области экрана, которую нужно
*           скопировать в прямоугольную область prcDst поверхности hDstSurface
*       hDstSurface - описатель поверхности, на которую нужно скопировать прямоугольную
*                     область экрана
*       prcDst - указатель на структуру RECT, задающую координаты прямоугольной области
*                поверхности hDstSurface, на которую нужно скопировать прямоугольную
*                область экрана
*
*   Возвращаемое значение
*       true, если копирование произведено успешно; иначе false.
*
*   Копирует прямоугольную область экрана, левый верхний угол которой задан параметрами х
*   и у, на прямоугольную область поверхности hDstSurface, заданную параметром prcDst.
*
****************************************************************************************/

bool Video_BltRectFromScreen(
	__in int x,
	__in int y,
	__in HANDLE hDstSurface,
	__in RECT *prcDst);

double Video_EstimateVSyncPeriod(DWORD nSamples);
